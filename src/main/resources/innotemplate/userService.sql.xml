<template>
	<class id="userService">
		<sql id="getUser">
			<![CDATA[
			   SELECT
             DISTINCT 
             u.CREATE_DT as "createDt",
             u.USER_ID as "userId",
             u.USER_IDENTITYCARD as "userIdentitycard",
             u.USER_ACCT as "userAcct",
             u.USER_NAME as "userName",
             u.USER_SEX as "userSex",
             u.USER_BIRTH as "userBirth",
             u.USER_EMAIL as "userEmail",
             u.USER_MOBILE as "userMobile",
             u.USER_TEL as "userTel",
             u.USER_FAX as "userFax",
             WMSYS.WM_CONCAT(o.ORG_NAME) as "orgName"
          FROM
              ORM_USER u,
              ORM_ORG_USER_MAP m,
              ORM_ORGANIZATION o
          WHERE
            u.VALID_SIGN = 'Y'
            AND u.USER_ID=m.USER_ID
            and m.ORG_ID=o.ORG_ID
            <#if userId?? && userId != ''>
				AND u.USER_ID = :userId
			</#if>
            <#if userAcct?? && userAcct != ''>
				AND u.USER_ACCT LIKE :userAcct
			</#if>
			<#if userName?? && userName != ''>
				AND u.USER_NAME LIKE :userName
			</#if>
			<#if userEmail?? && userEmail != ''>
				AND u.USER_MOBILE LIKE :userEmail
			</#if>
			<#if orgId??>
				AND O.ORG_ID IN (SELECT DISTINCT ORG_ID FROM ORM_ORGANIZATION START WITH ORG_ID IN (:orgId) CONNECT BY PRIOR ORG_ID=PARENT_ORG_ID)
			</#if>
          GROUP BY u.CREATE_DT,u.USER_ID,u.USER_IDENTITYCARD,u.USER_ACCT,u.USER_NAME,u.USER_SEX,u.USER_BIRTH,
          u.USER_EMAIL,u.USER_EMAIL,u.USER_MOBILE,u.USER_MOBILE,u.USER_TEL,u.USER_FAX
			]]>
		</sql>
	</class>
	<class id="orgService">
		<sql id="institutionTree">
			<![CDATA[
			with temporg as (select * from ORM_ORGANIZATION where org_type = 'I'),
     		treeorg as (
         		SELECT ORG_ID, PARENT_ORG_ID, CONNECT_BY_ROOT (ORG_ID) root FROM (
             	SELECT ORG_ID, PARENT_ORG_ID FROM (SELECT ORG_ID,DECODE(org_type,'I','ROOT',PARENT_ORG_ID) PARENT_ORG_ID,ROOT_ORG_ID FROM ORM_ORGANIZATION) START WITH ROOT_ORG_ID = ORG_ID CONNECT BY PARENT_ORG_ID = PRIOR ORG_ID 
             	) CONNECT BY PRIOR ORG_ID = PARENT_ORG_ID
     		)
			SELECT c.*, b.num FROM  (
				SELECT root AS id, count(1) num FROM (
    				SELECT distinct b.user_id,a.root FROM treeorg A right JOIN (
               			SELECT ORG_ID, user_id FROM ORM_ORG_USER_MAP
         			) b ON a.ORG_ID = b.ORG_ID
				) group by root
			) b right join temporg c on b.id = c.org_id order by num desc 
			]]>
		</sql>
		<sql id="orgTree">
		<![CDATA[
			with temporg as (select * from ORM_ORGANIZATION where ROOT_ORG_ID = :instId),
     		treeorg as (
         		SELECT ORG_ID, PARENT_ORG_ID, CONNECT_BY_ROOT (ORG_ID) root FROM (
            		 SELECT ORG_ID, PARENT_ORG_ID FROM temporg START WITH ROOT_ORG_ID = ORG_ID CONNECT BY PARENT_ORG_ID = PRIOR ORG_ID
             	) CONNECT BY PRIOR ORG_ID = PARENT_ORG_ID
     		)
			SELECT c.*, b.num FROM  (
				SELECT root AS id, count(1) num FROM (
    				SELECT distinct b.user_id,a.root FROM treeorg A right JOIN (
               			SELECT ORG_ID, user_id FROM ORM_ORG_USER_MAP
         			) b ON a.ORG_ID = b.ORG_ID
				) group by root
			) b right join temporg c on b.id = c.org_id order by num desc 		
			]]>
		</sql>
	</class>
	<class id="userRole">
		<sql id="assign">
		<![CDATA[
			SELECT
				r.*
			FROM
				ORM_ROLE r,
				ORM_USER_ROLE_MAP m
			WHERE
				r.ROLE_ID=m.ROLE_ID,
			<#if roleName?? && roleName != ''>
				AND r.ROLE_NAME_CN like :roleName 
			</#if>
			<#if systemName?? && systemName != ''>
				AND r.SYSTEM_ID = (SELECT SYSTEM_ID FROM ORM_SYSTEM WHERE SYSTEM_NAME=:systemName)
			</#if>
				m.USER_ID=:userId
				]]>
		</sql>
		<sql id="notAssign">
		<![CDATA[
			SELECT
				r.*
			FROM
				ORM_ROLE r,
			WHERE
				r.ROLE_ID NOT IN (
					SELECT
						r.ROLE_ID
					FROM
						ORM_ROLE role,
						ORM_USER_ROLE_MAP map
					WHERE
						role.ROLE_ID=m.ROLE_ID,
						mmap.USER_ID=:userId
				)
			<#if roleName?? && roleName != ''>
				AND r.ROLE_NAME_CN like :roleName
			</#if>
			<#if systemName?? && systemName != ''>
				AND r.SYSTEM_ID = (SELECT SYSTEM_ID FROM ORM_SYSTEM WHERE SYSTEM_NAME=:systemName)
			</#if>
			]]>
		</sql>
	</class>
		<class id="orgRole">
		<sql id="assign">
		<![CDATA[
			SELECT
				r.*
			FROM
				ORM_ROLE r,
				ORM_ORG_USER_MAP m
			WHERE
				r.ROLE_ID=m.ROLE_ID,
			<#if roleName?? && roleName != ''>
				AND r.ROLE_NAME_CN like :roleName 
			</#if>
			<#if systemName?? && systemName != ''>
				AND r.SYSTEM_ID = (SELECT SYSTEM_ID FROM ORM_SYSTEM WHERE SYSTEM_NAME=:systemName)
			</#if>
				m.ORG_ID=:orgId
				]]>
		</sql>
		<sql id="notAssign">
		<![CDATA[
			SELECT
				r.*
			FROM
				ORM_ROLE r,
			WHERE
				r.ROLE_ID NOT IN (
					SELECT
						r.ROLE_ID
					FROM
						ORM_ROLE role,
						ORM_ORG_USER_MAP map
					WHERE
						role.ROLE_ID=m.ROLE_ID,
						mmap.ORG_ID=:orgId
				)
			<#if roleName?? && roleName != ''>
				AND r.ROLE_NAME_CN like : roleName
			</#if>
			<#if systemName?? && systemName != ''>
				AND r.SYSTEM_ID = (SELECT SYSTEM_ID FROM ORM_SYSTEM WHERE SYSTEM_NAME=:systemName)
			</#if>
			]]>
		</sql>
	</class>
</template>